---
title: "Exploration of the FPL Dataset"
author: "Othmane Mahfoud"
date: "22/11/2023"
---

# A Visual Exploration of The FPL Dataset

Over the next section of this document we will be exploring the [FPL Dataset](https://www.kaggle.com/datasets/joebeachcapital/fantasy-football) from Kaggle.

## Load the Data

First we read the data we carefully stored inside the data folder onto a dataframe using the readr package.

```{r}

library(readr)

fpl <- read_csv("data/cleaned_merged_seasons.csv")
```

We then have a look at our data to make sure everything was loaded properly

```{r}

head(fpl)
```

## Data Exploration

Let's have a look at the structure of our data

```{r}

str(fpl)
```

Now let's look at some summary statistics for our dataset

```{r}

summary(fpl)
```

Earlier I noticed that there were some null values in the team_x column, let's look at the null values and how they are dispersed across

```{r}

library(dplyr)

fpl |>
  group_by(season_x) |>
  summarise_all(~ sum(is.na(.)))
```

## Data Cleaning

We notice here that the player's team, an important component of our data, is null for many rows in seasons 2016-17 and 2017-18, we will drop those for now and focus on data from the last three seasons.

```{r}

# Removing both seasons
fpl <- subset(fpl, !((season_x == "2016-17") | (season_x == "2017-18")))

#Checking if it worked
fpl |>
  group_by(season_x) |>
  summarise(row_count = n())

#Checking the head
head(fpl)
```

We also need to fix some data types that are not properly assigned

```{r}

library(stringr)

fpl_clean <-
  fpl |>
    mutate(
      season_x = substr(season_x, start = 1, stop = 4),
      across(c(assists, bonus, bps, clean_sheets, element, fixture, goals_conceded, goals_scored, minutes, opponent_team, own_goals, penalties_saved, penalties_missed, red_cards, round, saves, selected, team_a_score, team_h_score, threat, total_points, transfers_out, transfers_in, value, yellow_cards, GW),
      as.integer)
    )

head(fpl_clean)

```

## Visual Exploration

Correlation Matrix

```{r}
library(ggplot2)
library(reshape2)

# Example data (replace this with your actual dataframe)
fpl_numeric <- 
  fpl_clean |>
    select_if(is.numeric) |>
    select(assists, clean_sheets, creativity, goals_scored, ict_index, influence, minutes, saves, penalties_saved , threat, yellow_cards, red_cards, total_points)

# Calculate correlation matrix
cor_matrix <- cor(fpl_numeric)

# Convert the correlation matrix to a long format
cor_df <- melt(cor_matrix)

# Plot the heatmap
ggplot(cor_df, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  geom_text(aes(label = round(value, 2)), vjust = 1) +
  scale_fill_gradient2(low = "#07F2F2", mid = "white", high = "#F2055C", midpoint = 0, limit = c(-1, 1), space = "Lab") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Correlation Heatmap", x = "", y = "")
```

### Points by Team

```{r}

library(ggplot2)

fpl_clean |>
  group_by(team_x) |>
  summarise(total_points = sum(total_points), .groups = "drop") |>
  ggplot(aes(y = reorder(team_x, total_points), x = total_points)) +
  geom_bar(stat = "identity", fill='#00FF85', alpha = 0.7 ,color='#38003c') +
  labs(title = "Total Points by Team Ranked",
       x = "Team",
       y = "Points") +
  theme_minimal() +
  theme(axis.text.y = element_text(color = "#38003c", face = "bold"), 
        axis.text.x = element_text(color = "#38003c", face = "bold"),
        plot.title = element_text(color = "#38003c", face = "bold"),
        axis.title = element_text(color = "#38003c", face = "bold")) 
```

### Clean-sheets by Goalkeeper

```{r}

library(ggplot2)
library(dplyr)
library(gridExtra)


# Filter data for Goalkeeper (GK)
gk_data <- fpl_clean %>%
  filter(position == "GK") %>%
  group_by(season_x, name) %>%
  summarise(total_clean_sheets = sum(clean_sheets), .groups = "drop") %>%
  arrange(season_x, desc(total_clean_sheets)) %>%
  group_by(season_x) %>%
  slice_head(n = 5)

# Create a list of plots for each season
plots_list <- lapply(unique(gk_data$season_x), function(season) {
  season_data <- gk_data %>%
    filter(season_x == season)
  
  ggplot(season_data, aes(y = reorder(name, total_clean_sheets), x = total_clean_sheets)) +
    geom_bar(stat = "identity", fill = '#00FF85', color = '#38003c', width = 0.6) +
    geom_text(
      aes(0, y = name, label = name),
      hjust = 0,
      nudge_x = 0.3,
      colour = "#38003c",
      size = 4
    ) +
    labs(title = paste("Top 5 Goalkeepers - Season", season),
         x = "Goals",
         y = "Player") +
    theme_minimal() +
    theme(axis.text.y = element_blank(),
          axis.text.x = element_text(color = "#38003c", face = "bold"),
          plot.title = element_text(color = "#38003c", face = "bold"),
          axis.title = element_text(color = "#38003c", face = "bold"),
          panel.background = element_rect(fill = "white"),
          panel.grid.major.x = element_line(color = "#38003c", linewidth = 0.2),
          panel.grid.major.y = element_blank()
          )
})

# Arrange the plots using grid.arrange
grid.arrange(grobs = plots_list, nrow = 3)
```

### Highest Scoring Forwards for each Season

```{r}

# Filter data for forwards (FWD)
fwd_data <- fpl_clean %>%
  filter(position == "FWD") %>%
  group_by(season_x, name) %>%
  summarise(total_goals_scored = sum(goals_scored), .groups = "drop") %>%
  arrange(season_x, desc(total_goals_scored)) %>%
  group_by(season_x) %>%
  slice_head(n = 5)

# Create a list of plots for each season
plots_list <- lapply(unique(fwd_data$season_x), function(season) {
  season_data <- fwd_data %>%
    filter(season_x == season)
  
  ggplot(season_data, aes(y = reorder(name, total_goals_scored), x = total_goals_scored)) +
    geom_bar(stat = "identity", fill = '#00FF85', color = '#38003c', width = 0.6) +
    geom_text(
      aes(0, y = name, label = name),
      hjust = 0,
      nudge_x = 0.3,
      colour = "#38003c",
      size = 4
    ) +
    labs(title = paste("Top 5 Goalscorers - Season", season),
         x = "Goals",
         y = "Player") +
    theme_minimal() +
    theme(axis.text.y = element_blank(),
          axis.text.x = element_text(color = "#38003c", face = "bold"),
          plot.title = element_text(color = "#38003c", face = "bold"),
          axis.title = element_text(color = "#38003c", face = "bold"),
          panel.background = element_rect(fill = "white"),
          panel.grid.major.x = element_line(color = "#38003c", linewidth = 0.2),
          panel.grid.major.y = element_blank()
          )
})

# Arrange the plots using grid.arrange
grid.arrange(grobs = plots_list, nrow = 3)

```

### Highest Scoring Forwards for each Season

```{r}

price_data <- 
  fpl_clean %>%
  group_by(name) %>%
  summarise(
    avg_points = mean(total_points), 
    avg_price = mean(value),
    .groups = "drop")
  
ggplot(price_data, aes(x = avg_price, y = avg_points)) +
  geom_point() +
  labs(title = "Scatter Plot of Average Price vs Average Points",
       x = "Average Price",
       y = "Average Points") +
  theme_minimal()

```

# Current Season Dataset

## Load the Data

```{r}

library(readr)

players <- read_csv("data/players.csv")
```

```{r}
head(players)
```
